---
title: "Client Report - Whatâ€™s in a Name?"
subtitle: "Course DS 250"
author: "Brian Munoz"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---


```{python}
#| label: libraries
#| include: false
import pandas as pd
import numpy as np
import plotly.express as px
import altair as alt
```


## Elevator pitch

_The relationship between movies and names is not as strong as many might think. While we can also verify that the influence of religious figures has weakened in recent years when naming people with said names._

```{python}
#| label: project-data
#| code-summary: Read and format project data

# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
df = pd.read_csv("https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv")
```

__Highlight the Questions and Tasks__

## QUESTION|TASK 1

__How does your name at your birth year compare to its use historically?__

_type your results and analysis here_

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here

# Filter the DataFrame for the name 'Brian'
brian_data = df[df['name'] == 'Brian']

# Reshape the data
melted_brian_data = brian_data.melt(id_vars=['name', 'year'], var_name='state', value_name='count')

# Aggregate the data
aggregated_brian_data = melted_brian_data.groupby(['year'])['count'].sum().reset_index()

# Create the interactive line plot
fig = px.line(aggregated_brian_data, x='year', y='count', title='Usage of the Name "Brian" Over Time')

# Update the layout
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Count',
    font=dict(size=14)
)

# Display the plot
fig.show()

```

_Here is another table using the scatter chart and a trend line:_

```{python}
#| label: Q0
#| code-summary: Read and format data
# Include and execute your code here

# Filter the DataFrame for the name 'Brian'
brian_data = df[df['name'] == 'Brian']

# Reshape the data
melted_brian_data = brian_data.melt(id_vars=['name', 'year'], var_name='state', value_name='count')

# Aggregate the data
aggregated_brian_data = melted_brian_data.groupby(['year'])['count'].sum().reset_index()

# Create the scatter plot with a trendline
fig = px.scatter(aggregated_brian_data, x='year', y='count', trendline='lowess', title='Usage of the Name "Brian" Over Time')

# Update the layout
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Total Count',
    font=dict(size=14)
)

# Display the plot
fig.show()


```


## QUESTION|TASK 2

__If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?__

_If a Brittany contact me at the precent moment (2024), base on the data we could said that the most lickly age could be in between the ages of 34 - 24._

```{python}
#| label: Q2-chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center

brittany_data = df[df['name'] == 'Brittany']

# Create a scatter plot using Plotly Express
fig = px.scatter(brittany_data, x='year', y='Total', title='Usage of the name "Brittany" over the years')
fig.update_layout(xaxis_title='Year', yaxis_title='Total')

fig.add_vline(x=1980, line_width=2, line_color="red",  line_dash="dash")

fig.add_vline(x=2000, line_width=2, line_color="red",  line_dash="dash")

fig.show()

```

## QUESTION|TASK 3

__Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?__

_It seems that the number of people with any of this realigious names have drasticly decrease as time goes by._

```{python}
#| label: Q3-chart
#| code-summary: plot example
#| fig-cap: "My useless chart"
#| fig-align: center

# Filter the data for the names and year range
names = ['Mary', 'Martha', 'Peter', 'Paul']
filtered_data = df[df['name'].isin(names) & (df['year'] >= 1920) & (df['year'] <= 2000)]

# Reshape the data
melted_data = filtered_data.melt(id_vars=['name', 'year'], var_name='state', value_name='count')

# Aggregate the data
aggregated_data = melted_data.groupby(['name', 'year'])['count'].sum().reset_index()

# Create the line plot
fig = px.line(aggregated_data, x='year', y='count', color='name', title='Name Usage of Mary, Martha, Peter, and Paul (1920-2000)')

# Update the layout
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Total Count',
    font=dict(size=14),
    legend=dict(title='Name')
)

fig.show()
```

## QUESTION|TASK 4

__Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?__

_I decided to use the name Kevin from the movie Home Alone to see if the movie affected the number of boys named Kevin increase after the movie came out_

```{python}
#| label: Q4
#| code-summary: Read and format data
# Include and execute your code here

names = ['Kevin']
filtered_data = df[df['name'].isin(names) & (df['year'] >= 1920) & (df['year'] <= 2020)]

# Reshape the data
melted_data = filtered_data.melt(id_vars=['name', 'year'], var_name='state', value_name='count')

# Aggregate the data
aggregated_data = melted_data.groupby(['name', 'year'])['count'].sum().reset_index()

# Create the line plot
fig = px.line(aggregated_data, x='year', y='count', color='name', title='Kevin (Home Alone)')

#Vertical 

fig.add_vline(x=1990, line_width=2, line_color="red", annotation_text="Home Alone Released", annotation_position="top right", line_dash="dash")

# Update the layout
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Total Count',
    font=dict(size=14),
    legend=dict(title='Name')
)

fig.show()

```

_I was able to conclude that it did not contribute for an increase number of people with the name Kevin to appear after the movie Home Alone was released_

## Streach

_Elliot graph_

```{python}
#| label: Q4-table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top

# Filter the DataFrame for the name 'Brian'

names = ['Elliot']
filtered_data = df[df['name'].isin(names) & (df['year'] >= 1950) & (df['year'] <= 2020)]

# Reshape the data
melted_data = filtered_data.melt(id_vars=['name', 'year'], var_name='state', value_name='count')

# Aggregate the data
aggregated_data = melted_data.groupby(['name', 'year'])['count'].sum().reset_index()

# Create the line plot
fig = px.line(aggregated_data, x='year', y='count', color='name', title='Elliot... What? (1950-2020)')

#Vertical 

fig.add_vline(x=1982, line_width=2, line_color="red", annotation_text="E.T Released", annotation_position="top left", line_dash="dash")
fig.add_vline(x=1985, line_width=2, line_color="red", annotation_text="Second Released", annotation_position="top right", line_dash="dash")
fig.add_vline(x=2001, line_width=2, line_color="red", annotation_text="Third Released", annotation_position="top right", line_dash="dash")

# Update the layout
fig.update_layout(
    xaxis_title='Year',
    yaxis_title='Total Count',
    font=dict(size=14),
    legend=dict(title='Name')
)

# Display the plot
fig.show()

```
